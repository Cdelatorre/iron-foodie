<script id="search-js" src="https://api.mapbox.com/search-js/v1.0.0-beta.17/web.js" defer></script>

{{#if edit }}
  <form action="/restaurants/{{restaurant.id}}/edit" method="POST">
{{else}}
  <form action="/restaurants" method="POST">
{{/if}}
  <div class="form-group mb-1">
    <label for="name">Name</label>
    <input name="name" type="text" class="form-control {{#if errors.name}}is-invalid{{/if}}" id="name" placeholder="Enter name"
      value="{{ restaurant.name }}">
    {{#if errors.name}}
      <div class="invalid-feedback">
        {{errors.name.message}}
      </div>
    {{/if}}
  </div>

  <div class="form-group mb-1">
    <label for="address">Location</label>
    <input
      type="text"
      class="form-control"
      id="mapbox-autofill"
      placeholder="Start typing your address, e.g. Pintor Ignacio de..."
      autocomplete="address-line1"
    >
    {{#if errors.address}}
      <div class="invalid-feedback">
        {{errors.address.message}}
      </div>
    {{/if}}
  </div>

  <input name="location" type="hidden" id="mapbox-autofill-location">
  <input name="address" type="hidden" id="mapbox-autofill-address">

  <div id="minimap-container" class="hidden"></div>

  <div class="form-group mb-1">
    <label for="image">Image</label>
    <input name="image" type="text" class="form-control {{#if errors.image}}is-invalid{{/if}}" id="image" placeholder="Enter image"
      value="{{ restaurant.image }}">
    {{#if errors.image}}
      <div class="invalid-feedback">
        {{errors.image.message}}
      </div>
    {{/if}}
  </div>

  <div class="form-group mb-1">
    <label for="text">Description</label>
    <textarea name="description" type="text" class="form-control html-editor {{#if errors.description}}is-invalid{{/if}}" id="text"
      placeholder="Enter restaurant description" rows="10">{{ restaurant.description }}</textarea>
    {{#if errors.description}}<div class="invalid-feedback">{{errors.description}}</div>
    {{/if}}
  </div>

  <div class="form-group mb-1">
    <label for="capacity">Capacity</label>
    <input name="capacity" type="number" class="form-control {{#if errors.capacity}}is-invalid{{/if}}" id="capacity" placeholder="Enter capacity"
      value="{{ restaurant.capacity }}">
    {{#if errors.capacity}}
      <div class="invalid-feedback">
        {{errors.capacity.message}}
      </div>
    {{/if}}
  </div>

  <div class="form-group mb-1">
    <label for="maxProductCost">Max Product Cost</label>
    <input name="maxProductCost" type="number" class="form-control {{#if errors.maxProductCost}}is-invalid{{/if}}" id="maxProductCost" placeholder="Enter maxProductCost"
      value="{{ restaurant.maxProductCost }}">
    {{#if errors.maxProductCost}}
      <div class="invalid-feedback">
        {{errors.maxProductCost.message}}
      </div>
    {{/if}}
  </div>

  <div class="form-group mb-1">
    <label for="categories">Categories</label>
    <select class="form-select" name="categories" show-labels multiple aria-label="Categories" id="categories">
      {{#each categories as |category|}}
      <option value="{{category}}" {{#restaurantHasCategory category=category restaurant=../restaurant}} selected
        {{/restaurantHasCategory}} data-img-src="{{categoryLabel id=category selector='image' }}" >{{categoryLabel id=category selector='text' }}</option>
      {{/each}}
    </select>
  </div>

  <button type="submit" class="btn btn-primary mb-5">Send</button>
</form>

<script>
  const ACCESS_TOKEN = 'pk.eyJ1IjoiY2RlbGF0b3JyZSIsImEiOiJja3Y5bHJ6ZzcweG0yMnZtZzI4eXJna2UxIn0.m-OWQWPhRrb5ZNRz0M9AqQ';

  let autofillCollection;
  let minimap;

  const minimapContainer = document.getElementById("minimap-container");
  const addressInput = document.getElementById("mapbox-autofill");
  const locationInput = document.getElementById("mapbox-autofill-location");
  const addressInputText = document.getElementById("mapbox-autofill-address");

  // Autofill initialization
  document.getElementById("search-js").onload = () => {
    mapboxsearch.config.accessToken = ACCESS_TOKEN;
    
    autofillCollection = mapboxsearch.autofill({});
    
    minimap = new MapboxAddressMinimap();
    minimap.canAdjustMarker = true;
    minimap.satelliteToggle = true;
    minimap.onSaveMarkerLocation = (lnglat) => {
      console.log(`Marker moved to ${lnglat}`);
    };
    const minimapContainer = document.getElementById("minimap-container");
    minimapContainer.appendChild(minimap);
    
    autofillCollection.addEventListener(
      "retrieve",
      async (e) => {
        if (minimap) {
          minimap.feature = e.detail.features[0];
          minimapContainer.classList.remove("hidden");
        }
        console.log(e.detail.features[0]);
        locationInput.value = JSON.stringify(e.detail.features[0].geometry.coordinates);
        addressInputText.value = e.detail.features[0].properties.address_line1;
      }
    );
  };
</script>
